package sigs.api.search;



import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import sigs.api.dao.DAOUser;



@Controller
@RequestMapping("/user")
@RestController
public class PersonSpecification implements Specification<DAOUser> {


  //  @Autowired
    private  DAOUser filter;

    public PersonSpecification(DAOUser filter) {
        super();
        this.filter = filter;
    }



    @GetMapping("/search")
    public Predicate toPredicate(Root<DAOUser> root, CriteriaQuery<?> cq,
                                 CriteriaBuilder cb) {

        Predicate p = cb.disjunction();

        if (filter.getUsername() != null) {
            p.getExpressions().add(cb.equal(root.get("username"), filter.getUsername()));
        }

        if (filter.getNom() != null && filter.getEmail() != null) {
            p.getExpressions().add(cb.and(
                    cb.equal(root.get("nom"), filter.getNom()),
                    cb.equal(root.get("email"), filter.getEmail())
            ));
        }


        return p;

    }


}
